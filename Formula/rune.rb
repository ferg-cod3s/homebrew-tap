# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rune < Formula
  desc "Ancient wisdom for modern workflows - A developer-first CLI productivity platform"
  homepage "https://github.com/ferg-cod3s/rune"
  version "0.1.0-alpha.12"
  license "MIT"

  depends_on "git" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/ferg-cod3s/rune/releases/download/v0.1.0-alpha.12/rune_Darwin_x86_64.tar.gz"
      sha256 "77a0ab2c8f6afe6026057b10667bb2e39bde346aabf1732945d13027adb5eee6"

      def install
        bin.install "rune"

        # Install shell completions
        bash_completion.install "completions/rune.bash" => "rune"
        zsh_completion.install "completions/rune.zsh" => "_rune"
        fish_completion.install "completions/rune.fish"

        # Create default config directory
        (etc/"rune").mkpath
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/ferg-cod3s/rune/releases/download/v0.1.0-alpha.12/rune_Darwin_arm64.tar.gz"
      sha256 "b723a83ed12588362bdfa07ac36e1a480cb5e9d34e1ad04ab5be9e42135398df"

      def install
        bin.install "rune"

        # Install shell completions
        bash_completion.install "completions/rune.bash" => "rune"
        zsh_completion.install "completions/rune.zsh" => "_rune"
        fish_completion.install "completions/rune.fish"

        # Create default config directory
        (etc/"rune").mkpath
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/ferg-cod3s/rune/releases/download/v0.1.0-alpha.12/rune_Linux_x86_64.tar.gz"
      sha256 "1e6153d52058829a272dd871dd4c327b6e427036f67fe36bb30d7b960da70a4c"
      def install
        bin.install "rune"

        # Install shell completions
        bash_completion.install "completions/rune.bash" => "rune"
        zsh_completion.install "completions/rune.zsh" => "_rune"
        fish_completion.install "completions/rune.fish"

        # Create default config directory
        (etc/"rune").mkpath
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/ferg-cod3s/rune/releases/download/v0.1.0-alpha.12/rune_Linux_arm64.tar.gz"
      sha256 "348f428fe07006f50ea4cca64c8efa22f322c2670c000c022a44c6260f9efb37"
      def install
        bin.install "rune"

        # Install shell completions
        bash_completion.install "completions/rune.bash" => "rune"
        zsh_completion.install "completions/rune.zsh" => "_rune"
        fish_completion.install "completions/rune.fish"

        # Create default config directory
        (etc/"rune").mkpath
      end
    end
  end

  def caveats
    <<~EOS
      To get started with rune:
        1. Initialize your configuration: rune init --guided
        2. Start your workday: rune start
        3. Check status: rune status
        4. End your workday: rune stop

      Configuration file location: ~/.rune/config.yaml

      For more information, visit: https://github.com/ferg-cod3s/rune
    EOS
  end

  test do
    system "#{bin}/rune", "--version"
    system "#{bin}/rune", "--help"
  end
end
