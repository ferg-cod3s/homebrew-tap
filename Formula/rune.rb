# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rune < Formula
  desc "Ancient wisdom for modern workflows - A developer-first CLI productivity platform"
  homepage "https://github.com/ferg-cod3s/rune"
  version "0.1.0-alpha.8"
  license "MIT"

  depends_on "git" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/ferg-cod3s/rune/releases/download/v0.1.0-alpha.8/rune_Darwin_x86_64.tar.gz"
      sha256 "a3ab686443b32b1750cdb7896012599548987ab8aba7db0710bf29d7a83a5dee"

      def install
        bin.install "rune"

        # Install shell completions
        bash_completion.install "completions/rune.bash" => "rune"
        zsh_completion.install "completions/rune.zsh" => "_rune"
        fish_completion.install "completions/rune.fish"

        # Create default config directory
        (etc/"rune").mkpath
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/ferg-cod3s/rune/releases/download/v0.1.0-alpha.8/rune_Darwin_arm64.tar.gz"
      sha256 "d2ae0048d413b8ae307d949a51881413a4f6517d44fe416578bb481f99215e73"

      def install
        bin.install "rune"

        # Install shell completions
        bash_completion.install "completions/rune.bash" => "rune"
        zsh_completion.install "completions/rune.zsh" => "_rune"
        fish_completion.install "completions/rune.fish"

        # Create default config directory
        (etc/"rune").mkpath
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/ferg-cod3s/rune/releases/download/v0.1.0-alpha.8/rune_Linux_x86_64.tar.gz"
      sha256 "c662ac28af2a36131b6e83b9ad19fa19f336dc07c3fb3ae0c8914124a801416c"
      def install
        bin.install "rune"

        # Install shell completions
        bash_completion.install "completions/rune.bash" => "rune"
        zsh_completion.install "completions/rune.zsh" => "_rune"
        fish_completion.install "completions/rune.fish"

        # Create default config directory
        (etc/"rune").mkpath
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/ferg-cod3s/rune/releases/download/v0.1.0-alpha.8/rune_Linux_arm64.tar.gz"
      sha256 "5959604c2bd6f3a0c30d4e919187e69a316cf37b884d081b5e3f992e001aabc6"
      def install
        bin.install "rune"

        # Install shell completions
        bash_completion.install "completions/rune.bash" => "rune"
        zsh_completion.install "completions/rune.zsh" => "_rune"
        fish_completion.install "completions/rune.fish"

        # Create default config directory
        (etc/"rune").mkpath
      end
    end
  end

  def caveats
    <<~EOS
      To get started with rune:
        1. Initialize your configuration: rune init --guided
        2. Start your workday: rune start
        3. Check status: rune status
        4. End your workday: rune stop

      Configuration file location: ~/.rune/config.yaml

      For more information, visit: https://github.com/ferg-cod3s/rune
    EOS
  end

  test do
    system "#{bin}/rune", "--version"
    system "#{bin}/rune", "--help"
  end
end
