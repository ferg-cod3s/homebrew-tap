# This file is auto-generated by GoReleaser. Do not edit manually.
class Rune < Formula
  desc "Ancient wisdom for modern workflows - A developer-first CLI productivity platform"
  homepage "https://github.com/ferg-cod3s/rune"
  version "0.1.0-alpha.4"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/ferg-cod3s/rune/releases/download/v0.1.0-alpha.4/rune_Darwin_arm64.tar.gz"
      sha256 "4b466bb4c674b08cef82599719102adf4d68aeb419a06ce5a0c12ba4980401d5"
    end
    if Hardware::CPU.intel?
      url "https://github.com/ferg-cod3s/rune/releases/download/v0.1.0-alpha.4/rune_Darwin_x86_64.tar.gz"
      sha256 "557dacd8433bea0849ef917957f663947d2592d4712e26f2b5dee19189cb0e2a"
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/ferg-cod3s/rune/releases/download/v0.1.0-alpha.4/rune_Linux_arm64.tar.gz"
      sha256 "d9e9b87a969df8758788f1e111a0b18234dcf50726cb931628883092213a5346"
    end
    if Hardware::CPU.intel?
      url "https://github.com/ferg-cod3s/rune/releases/download/v0.1.0-alpha.4/rune_Linux_x86_64.tar.gz"
      sha256 "4f822ee61f4615e578b23a8dacbdea39639a03fd320733848be49e077814f1e2"
    end
  end

  def install
    bin.install "rune"
    
    # Install shell completions
    bash_completion.install "completions/rune.bash" => "rune"
    zsh_completion.install "completions/rune.zsh" => "_rune"
    fish_completion.install "completions/rune.fish"
    
    # Create default config directory
    (etc/"rune").mkpath
  end

  test do
    system "#{bin}/rune", "--version"
    system "#{bin}/rune", "--help"
  end

  def caveats
    <<~EOS
      To get started with rune:
        1. Initialize your configuration: rune init --guided
        2. Start your workday: rune start
        3. Check status: rune status
        4. End your workday: rune stop
      
      Configuration file location: ~/.rune/config.yaml
    EOS
  end
end
